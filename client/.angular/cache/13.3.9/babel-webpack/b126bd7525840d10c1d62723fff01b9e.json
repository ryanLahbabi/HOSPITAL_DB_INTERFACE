{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { CommunicationService } from \"../services/communication.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/communication.service\";\nexport let FormCreationMedecinComponent = /*#__PURE__*/(() => {\n  class FormCreationMedecinComponent {\n    constructor(fb, communicationService) {\n      this.fb = fb;\n      this.communicationService = communicationService;\n      this.newMedecins = new EventEmitter();\n      this.formCreationMedecin = this.fb.group({\n        prenom: ['', Validators.required],\n        nom: ['', Validators.required],\n        specialite: ['', Validators.required],\n        annesexperiences: [null, [Validators.required, Validators.min(0), Validators.max(99)]],\n        idservice: [null, [Validators.required, Validators.min(0), Validators.max(9)]]\n      });\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      var _a, _b, _c, _d, _e, _f;\n\n      if (this.formCreationMedecin.valid) {\n        const medecin = {\n          idmedecin: (_a = this.formCreationMedecin.get('idmedecin')) === null || _a === void 0 ? void 0 : _a.value,\n          prenom: ((_b = this.formCreationMedecin.get('prenom')) === null || _b === void 0 ? void 0 : _b.value) || 'Prénom par défaut',\n          nom: ((_c = this.formCreationMedecin.get('nom')) === null || _c === void 0 ? void 0 : _c.value) || 'Nom par défaut',\n          specialite: ((_d = this.formCreationMedecin.get('specialite')) === null || _d === void 0 ? void 0 : _d.value) || 'Radiologie',\n          annesexperiences: ((_e = this.formCreationMedecin.get('annesexperiences')) === null || _e === void 0 ? void 0 : _e.value) || 7,\n          idservice: ((_f = this.formCreationMedecin.get('idservice')) === null || _f === void 0 ? void 0 : _f.value) || 4 // ... autres champs ...\n\n        };\n        this.communicationService.saveMedecin(medecin).subscribe(() => {// ... traitement après l'envoi ...\n        });\n        this.newMedecins.emit(medecin);\n        this.formCreationMedecin.reset();\n      }\n    }\n\n  }\n\n  FormCreationMedecinComponent.ɵfac = function FormCreationMedecinComponent_Factory(t) {\n    return new (t || FormCreationMedecinComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CommunicationService));\n  };\n\n  FormCreationMedecinComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormCreationMedecinComponent,\n    selectors: [[\"app-form-creation-medecin\"]],\n    outputs: {\n      newMedecins: \"newMedecins\"\n    },\n    decls: 25,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"prenom\"], [\"type\", \"text\", \"id\", \"prenom\", \"formControlName\", \"prenom\", \"placeholder\", \"Zied\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"formControlName\", \"nom\", \"placeholder\", \"Lahbabi\"], [\"for\", \"specialite\"], [\"type\", \"text\", \"id\", \"specialite\", \"formControlName\", \"specialite\", \"placeholder\", \"Radiologue\"], [\"for\", \"annesexperiences\"], [\"type\", \"number\", \"id\", \"annesexperiences\", \"formControlName\", \"annesexperiences\", \"min\", \"0\", \"max\", \"99\", \"placeholder\", \"15\"], [\"for\", \"idservice\"], [\"type\", \"number\", \"id\", \"idservice\", \"formControlName\", \"idservice\", \"min\", \"0\", \"max\", \"9\", \"placeholder\", \"2\"], [\"type\", \"submit\"], [1, \"fa\", \"fa-plus\"]],\n    template: function FormCreationMedecinComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function FormCreationMedecinComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Pr\\u00E9nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Sp\\u00E9cialit\\u00E9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\", 7);\n        i0.ɵɵtext(16, \"Ann\\u00E9es d'Exp\\u00E9rience\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\")(19, \"label\", 9);\n        i0.ɵɵtext(20, \"ID Service\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 11);\n        i0.ɵɵelement(23, \"i\", 12);\n        i0.ɵɵtext(24, \"Ajouter\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.formCreationMedecin);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NumberValueAccessor, i1.MinValidator, i1.MaxValidator],\n    styles: [\"\"]\n  });\n  return FormCreationMedecinComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}